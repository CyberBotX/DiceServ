/*
 * Example configuration file for DiceServ.
 */

/*
 * First, create the service.
 */
service
{
	/*
	 * The name of the DiceServ client.
	 * If you change this value, you probably want to change the client directive in the configuration for the diceserv module too.
	 */
	nick = "DiceServ"

	/*
	 * The username of the DiceServ client.
	 */
	user = "services"

	/*
	 * The hostname of the DiceServ client.
	 */
	host = "services.host"

	/*
	 * The realname of the DiceServ client.
	 */
	gecos = "Dice Roll Service"

	/*
	 * The modes this client should use.
	 * Do not modify this unless you know what you are doing.
	 *
	 * These modes are very IRCd specific. If left commented, sane defaults
	 * are used based on what protocol module you have loaded.
	 *
	 * Note that setting this option incorrectly could potentially BREAK some, if
	 * not all, usefulness of the client. We will not support you if this client is
	 * unable to do certain things if this option is enabled.
	 */
	#modes = "+o"

	/*
	 * An optional comma separated list of channels this service should join. Outside
	 * of log channels this is not very useful, as the service will just idle in the
	 * specified channels, and will not accept any types of commands.
	 *
	 * Prefixes may be given to the channels in the form of mode characters or prefix symbols.
	 */
	#channels = "@#services,#mychan"
}

/*
 * Core DiceServ module.
 *
 * Provides essential functionality for DiceServ.
 */
module
{
	name = "diceserv"

	/*
	 * The name of the client that should be DiceServ.
	 *
	 * This directive is optional.
	 */
	client = "DiceServ"

	/*
	 * If set, then channel operators, in addition to the channel founder, can set the ignore status of a channel.
	 */
	#chanopcanignore = yes

	/*
	 * This should only be set if you are migrating from Anope 1.8.x or Anope 1.9.x prior to Anope 1.9.2.
	 * This is the filename of the database from those versions. On the first run of DiceServ, it will migrate
	 * the ignore data from this database into the main Anope database and then delete the file. After that,
	 * you can comment out this directive.
	 */
	#diceservdb = "data/diceserv.db"
}

/*
 * Core DiceServ commands.
 *
 * In Anope modules can provide (multiple) commands, each of which has a unique command name. Once these modules
 * are loaded you can then configure the commands to be added to any client you like with any name you like.
 *
 * Additionally, you may provide a permission name that must be in the opertype of users executing the command.
 *
 * Sane defaults are provided below that do not need to be edited unless you wish to change the default behavior.
 */

/* Give it a help command. */
command { service = "DiceServ"; name = "HELP"; command = "generic/help"; }

/*
 * ds_roll
 *
 * Provides the commands:
 *   diceserv/roll - Basic roll command.
 *   diceserv/exroll - Extended roll command.
 *
 * Used for rolling dice (or even math).
 *
 * Also included are the fantasy triggers for those commands.
 */
module { name = "ds_roll" }
command { service = "DiceServ"; name = "ROLL"; command = "diceserv/roll"; }
command { service = "DiceServ"; name = "EXROLL"; command = "diceserv/exroll"; }

fantasy { name = "ROLL"; command = "diceserv/roll"; }
fantasy { name = "EXROLL"; command = "diceserv/exroll"; }

/*
 * ds_calc
 *
 * Provides the commands:
 *   diceserv/calc - Basic calc command.
 *   diceserv/excalc - Extended calc command.
 *
 * Similar to the above ROLL and EXROLL commands, but results are not rounded at the end.
 *
 * Also included are the fantasy triggers for those commands.
 */
module { name = "ds_calc" }
command { service = "DiceServ"; name = "CALC"; command = "diceserv/calc"; }
command { service = "DiceServ"; name = "EXCALC"; command = "diceserv/excalc"; }

fantasy { name = "CALC"; command = "diceserv/calc"; }
fantasy { name = "EXCALC"; command = "diceserv/excalc"; }

/*
 * ds_dnd3echar
 *
 * Provides the command diceserv/dnd3echar.
 *
 * Used for rolling the stats for a Dungeons and Dragons 3rd Edition character.
 *
 * Also included is the fantasy trigger for that command.
 */
module { name = "ds_dnd3echar" }
command { service = "DiceServ"; name = "DND3ECHAR"; command = "diceserv/dnd3echar"; }

fantasy { name = "DND3ECHAR"; command = "diceserv/dnd3echar"; }

/*
 * ds_earthdawn
 *
 * Provides the command diceserv/earthdawn.
 *
 * Used for rolling dice for the Earthdawn 1st Edition / Classic Edition / 2nd Edition rules.
 *
 * Also included is the fantasy trigger for that command.
 */
module { name = "ds_earthdawn" }
command { service = "DiceServ"; name = "EARTHDAWN"; command = "diceserv/earthdawn"; }

fantasy { name = "EARTHDAWN"; command = "diceserv/earthdawn"; }

/*
 * ds_set
 *
 * Provides the commands:
 *   diceserv/set - Base SET command, doesn't actually do anything.
 *   diceserv/set/ignore - Controls making DiceServ ignore channels/nicks.
 *
 * Currently only used for ignore functionality. Can only be used by channel founders (for channels),
 * or by Services operators who are given the diceserv/set command.
 */
module { name = "ds_set" }
command { service = "DiceServ"; name = "SET"; command = "diceserv/set"; }
command { service = "DiceServ"; name = "SET IGNORE"; command = "diceserv/set/ignore"; }

/*
 * ds_status
 *
 * Provides the command diceserv/status.
 *
 * Used to allow Services operators to view the DiceServ ignore status of a channel or nick.
 */
module { name = "ds_status" }
command { service = "DiceServ"; name = "STATUS"; command = "diceserv/status"; permission = "diceserv/status"; }

/*
 * ds_list
 *
 * Provides the command diceserv/list.
 *
 * Used to allow Services operators to get a list of channel or nicks who are ignored with DiceServ.
 */
module { name = "ds_list" }
command { service = "DiceServ"; name = "LIST"; command = "diceserv/list"; permission = "diceserv/list"; }
